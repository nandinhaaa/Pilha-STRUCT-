#include <stdio.h>
#include <stdlib.h> //importante para alocação de memória 
#define MAX 10 

typedef int tdado;
typedef struct {
	int topo;
	tdado pilha [MAX];
}tpilha;

void inicializa (tpilha *p) {
	p->topo=-1; 
} 
//--------------------------
int push (tpilha *p, tdado x) {
	if (p->topo==MAX-1) //está cheio
	return 0;
	p->topo++;
	p->pilha[p->topo]=x; //dados no vetor (dado no p em direção ao topo)
	return 1; 
}
//--------------------------
tdado pop(tpilha *p){
	tdado aux; 
	aux = p->pilha[p->topo];
	p->topo--; 
	return aux; 
}
//--------------------------
int isEmpty (tpilha p) //p passagem de valor *p (passagem por referencia) 
{  
	if (p.topo== -1)
		return 1;
	else 
		return 0;  
}	
//--------------------------
void mostraPilha (tpilha p)
{
	while (p.topo!= -1) {
		printf ("%d |",p.pilha [p.topo]); //mostra o valor do topo
		p.topo --;//desce a posição
	} //fim do while
	printf ("\n");
}
//--------------------------
int menu(){
	int op;
	printf("*** Estrutura de Dados I - Pilha Estatica ****\n");
	printf("1-Push (Inserir)\n");
	printf("2-Pop (Remover)\n");
	printf("3-Top (Olhar Topo)\n");
	printf("0-Sair\n");
	scanf("%d",&op);
	return op;
}
//------------------
int main (){
	tpilha p1; 
	tdado x; 
	int op; 
	inicializa (&p1); // &(trazendo o endereço de memória) 
	do 	{
			op = menu();
		mostraPilha(p1); 
		printf ("Topo: %d \n", p1.topo); //ver valor do topo
		switch (op){
			case 1: printf ("Dado para inserir: ");
			scanf ("%d",&x); 
			if (push (&p1,x) ==1)
			printf ("Dados inseridos :) \n");
			else 
			printf ("stack overflow :( \n)"); //estouro de pilha
			break; 
			case 0: printf("Saindo....;) \n");
		} //fim do switch
		getch(); //pode ser utilizado o getch ou o system pause
		system ("cls"); 
		}
		while (op!=0); 
}
